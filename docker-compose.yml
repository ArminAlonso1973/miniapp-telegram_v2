version: '3.8'

services:
  postgres:
    container_name: postgres_service
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    env_file:
      - ./backend/.env

  redis:
    container_name: redis_service
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app-network
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    env_file:
      - ./backend/.env

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - QUART_APP=app:app
      - POSTGRES_HOST=postgres_service
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis_service
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - app-network
    depends_on:
      - postgres
      - redis
    env_file:
      - ./backend/.env

  frontend:
    build:
      context: ./frontend
    ports:
      - "5173:80"
    networks:
      - app-network
    env_file:
      - ./backend/.env

  tests:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    command: pytest -v --setup-show
    volumes:
      - ./backend:/app
    environment:
      - PYTHONPATH=/app
      - QUART_APP=app:app
      - POSTGRES_HOST=postgres_service
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis_service
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - app-network
    depends_on:
      - postgres
      - redis
    env_file:
      - ./backend/.env

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
